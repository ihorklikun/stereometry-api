// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Shapes3D.DAL.Context;

namespace Shapes3D.DAL.Migrations
{
    [DbContext(typeof(StereometryContext))]
    partial class StereometryContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.10")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Shapes3D.DAL.Entities.Admin", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("IdLink")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("Id")
                        .IsUnique();

                    b.ToTable("Admins");
                });

            modelBuilder.Entity("Shapes3D.DAL.Entities.RegularUser", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("IdLink")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("Id")
                        .IsUnique();

                    b.ToTable("RegularUsers");
                });

            modelBuilder.Entity("Shapes3D.DAL.Entities.Shape", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("AddedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsAvailableInGallary")
                        .HasColumnType("bit");

                    b.Property<string>("Json")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("RegularUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ShapeTypeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("UpdatedDateTime")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("Id")
                        .IsUnique();

                    b.HasIndex("RegularUserId");

                    b.HasIndex("ShapeTypeId");

                    b.ToTable("Shapes");
                });

            modelBuilder.Entity("Shapes3D.DAL.Entities.ShapeType", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("Id")
                        .IsUnique();

                    b.ToTable("ShapeTypes");
                });

            modelBuilder.Entity("Shapes3D.DAL.Entities.Shape", b =>
                {
                    b.HasOne("Shapes3D.DAL.Entities.RegularUser", "RegularUser")
                        .WithMany("UserShapes")
                        .HasForeignKey("RegularUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Shapes3D.DAL.Entities.ShapeType", "ShapeType")
                        .WithMany("Shapes")
                        .HasForeignKey("ShapeTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("RegularUser");

                    b.Navigation("ShapeType");
                });

            modelBuilder.Entity("Shapes3D.DAL.Entities.RegularUser", b =>
                {
                    b.Navigation("UserShapes");
                });

            modelBuilder.Entity("Shapes3D.DAL.Entities.ShapeType", b =>
                {
                    b.Navigation("Shapes");
                });
#pragma warning restore 612, 618
        }
    }
}
